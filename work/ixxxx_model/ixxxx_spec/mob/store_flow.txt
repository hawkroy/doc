/* vim: set fileencodings=utf-8,gbk,gb2312,cp936 termencoding=utf-8: */

store mob pipeline flow:
   0. tlb visit
      1. tlb hit, nothing
      2. tlb miss, TLB_MISS replay
        1. get pmh
          1. success, nothing
          2. fail
            1. request at retire stage, ATRET replay
            2. MISS_NO_PRB replay
   work in no replay....
   1. old sta_pref_scheme, sta_pref_no_issued
      send to ul2 arb
      a. succ, sta_pref_issue
      b. fail, not issued
   2. setting_sta_pref_queue_scheme(0), !WC||!UC, sta pref allocate, 分配sta_pref queue
   3. va calc done, then check partial match
   pipeline start.....
   4. sta, !ST_WB || !setting_sta_pref_pipeline_scheme(0), return
   5. check on rb_replace same cycle dl1_replace_cycle (why cur_time % 16 check?)
      1. conflict
        1. !setting_sta_pref_retry_block_for_replace(0) || setting_sta_pref_dont_retry_atret(1) && oldest, done, no replay
        2. otherwise, DL1_BANK_CONFLICT
      2. no conflict, so update dl1_read_cycle[cur_time % 16] = 1
   sta_pref dl1 cache start, no replay....
   6. setting_sta_pref_spawn_l2tol1_pref(1){spawn l2tol1 prefetcher}，!miss_dl1
      hwp_l1进行detector training, hwp_train_detectors
   7. visit dl1 cache & fb(lmb&&smb)
      0. setting_sta_pref_spawn_l2tol1_pref(1) && !miss_dl1，查询hwp的train detector
      1. dl1 cache & fb found hit or not, all miss
        1. cam_smbs conflict check, if hit, then done
        2. miss, then
          2.1 !miss_dl1, detector_num==-1{mean no detector in hwp_l1}, setting_sta_pref_spawn_l2tol1_pref(1), not detector hwp_train in hwp_l1
              check on different queue(UL2, L2M, BUS, HWP){condition: !oldest, priority=0, UL2_TYPE}, no match, then create hwp_l1 entry
          2.2 setting_lmb_enable(1) && setting_lcu_lmb_filtering(1)（检查lmb是否包含有相同的request)
              1. 存在lmb entry, 设置为DL1_MISS，sta replay， push mob_sleep，等待replay
              2. 不存在，继续
          2.3 !2.2, check on different queue(L2M, BUS) {condition: priority(uop_num | swp), is_oldest, UL2_TYPE}
          2.4 setting_sta_pref_pipeline_scheme(0)
              1. setting_sta_pref_dont_use_fb(0){sta pref not use fb, just sent to ul2}
                   1. ! (setting_cores_share_ul2(0){share ul2 in proc all cores} && not grant to other cores)
                         TBD
                         enqueue ul2
              2. !setting_sta_pref_dont_use_fb
                   1.memory_order check in lmb && dispatch_in_smb
                       1. success, done
                       2. lmb fail, nothing
                       3. lmb succ, smb fail
                            1. smb full, setting_sta_pref_retry_no_fb_alloc(0){sta pref retry on fb full}, ||  !(setting_sta_pref_dont_retry_atret(1) && uop is oldest), replay, DL1_MISS_NO_FB
        3. dl1 cache hit or fb hit
           1. push hwp_reorder_queue of hwp_l2, with HWP_MISS_LEVEL_HIT_DL1
           2. fb hit, not dl1 hit
               update num_reads_lmb counter, set read_addr_lmb to current PA
           3. dl1 hit, no fb hit
           4. update thread.miss_vaddr to invalid if match
           5. train on every l1_access && setting_sta_pref_spawn_dram_pref(1)
               1. !fb hit, write dl1??, why
               2. train hwp_l2
           6. uncachable && !fb hit, invalid cache, dl1, dl2
    8. sta done